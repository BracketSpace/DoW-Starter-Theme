name: Test

on: push

jobs:
  syntax:
    name: PHP Syntax
    runs-on: ubuntu-latest
    steps:
      - name: Set PHP version
        run: sudo update-alternatives --set php /usr/bin/php7.4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP Dependencies
        uses: "ramsey/composer-install@v2"
      - name: Lint
        run: composer syntax
  phpcompat:
    name: PHP Compat
    runs-on: ubuntu-latest
    steps:
      - name: Set PHP version
        run: sudo update-alternatives --set php /usr/bin/php7.4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP Dependencies
        uses: "ramsey/composer-install@v2"
      - name: Analyze
        run: composer phpcompat
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Set PHP version
        run: sudo update-alternatives --set php /usr/bin/php7.4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP Dependencies
        uses: "ramsey/composer-install@v2"
      - name: Analyze
        run: composer phpstan
  phpcs:
    name: PHP Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Set PHP version
        run: sudo update-alternatives --set php /usr/bin/php7.4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP Dependencies
        uses: "ramsey/composer-install@v2"
      - name: Coding Standards
        run: composer phpcs
  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Setup variables
        id: vars
        run: |
          echo "::set-output name=yarn-cache-path::$(yarn cache dir)"
      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.vars.outputs.yarn-cache-path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install Node dependencies
        run: yarn install --no-progress
      - name: Lint SCSS files
        run: yarn lint:scss
  eslint:
    name: ESlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Setup variables
        id: vars
        run: |
          echo "::set-output name=yarn-cache-path::$(yarn cache dir)"
      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.vars.outputs.yarn-cache-path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install Node dependencies
        run: yarn install --no-progress
      - name: Lint JS files
        run: yarn lint:js
  tsc:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Setup variables
        id: vars
        run: |
          echo "::set-output name=yarn-cache-path::$(yarn cache dir)"
      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.vars.outputs.yarn-cache-path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install Node dependencies
        run: yarn install --no-progress
      - name: Check types
        run: yarn tsc
