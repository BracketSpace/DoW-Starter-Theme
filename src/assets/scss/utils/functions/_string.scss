/**
 * String functions
 */
@use "sass:list";
@use "sass:map";
@use "sass:string";

@function kebab-case($string, $exclude-numbers: false) {
	$string:  string.quote(#{ $string });
	$string:  string.to-lower-case(string.slice($string, 1, 1)) + string.slice($string, 2);
	$result:  "";
	$exclude: "-", "_";
	$numbers: "0", "1", "2", "3", "4", "5", "6", "7", "8", "9";

	@if $exclude-numbers {
		$exclude: list.join($exclude, $numbers);
	}

    @warn $string;

	$prev-char: "";

	@while string.length($string) > 0 {
		$char: string.slice($string, 1, 1);

		@if not contain($exclude, $char) and
			string.to-upper-case($char) == $char and
			(not contain($numbers, $char) or not contain($numbers, $prev-char)) {
			$result: $result + "-" + string.to-lower-case($char);
		} @else {
			$result: $result + $char;
		}

		$prev-char: $char;
		$string: string.slice($string, 2);
	}

	@return $result;
}

@function kebab-case-keys($map, $numbers: false) {
	$result: ();

	@each $key, $value in $map {
		@if (map == type-of($value)) {
			$value: kebab-case-keys($value, $numbers);
		}

		$result: map.merge($result, (#{ kebab-case($key, $numbers) }: $value));
	}

	@return $result;
}
